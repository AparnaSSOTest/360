{
  "pluginType": "DB",
  "pluginId": "mongo-plugin",
  "unpublishedAction": {
    "name": "getDevelopersUsage",
    "datasource": {
      "name": "CS_Production",
      "pluginId": "mongo-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "id": "CS_Production",
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Success",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "selfReferencingDataPaths": [],
      "formData": {
        "aggregate": {
          "limit": {
            "data": "100000"
          },
          "arrayPipelines": {
            "data": "[\n  {\n    $match: {\n      viewMode: false,\n\t\t\tisSubscribed: true,\n\t\t\tstripeCustomerId: '{{getSegmentSFAccounts.data.find(item => item.id === SFTableData.selectedRow.Id)?.stripe_id_c}}'\n    }\n  },\n  {\n    $group: {\n      _id: \"$instanceUserId\"\n      count: { $sum: 1 }\n    }\n  }, {\n\t\t$sort: {\n\t\t\tcount: -1\n\t\t}\n\t}\n]"
          }
        },
        "collection": {
          "data": "usagePulse"
        },
        "command": {
          "data": "AGGREGATE"
        },
        "count": {
          "query": {
            "data": ""
          }
        },
        "delete": {
          "limit": {
            "data": "SINGLE"
          },
          "query": {
            "data": ""
          }
        },
        "distinct": {
          "query": {
            "data": ""
          },
          "key": {
            "data": ""
          }
        },
        "find": {
          "skip": {
            "data": ""
          },
          "query": {
            "data": "{\n\tviewMode: false,\n\tisSubscribed: true,\n\tstripeCustomerId: '{{getSegmentSFAccounts.data.find(item => item.id === SFTableData.selectedRow.Id)?.stripe_id_c}}'\n}"
          },
          "sort": {
            "data": ""
          },
          "limit": {
            "data": "10"
          },
          "projection": {
            "data": ""
          }
        },
        "insert": {
          "documents": {
            "data": ""
          }
        },
        "misc": {
          "formToNativeQuery": {
            "data": "{\n  \"aggregate\": \"usagePulse\",\n  \"pipeline\": [\n  {\n    $match: {\n      viewMode: false,\n\t\t\tisSubscribed: true,\n\t\t\tstripeCustomerId: '{{getSegmentSFAccounts.data.find(item => item.id === SFTableData.selectedRow.Id)?.stripe_id_c}}'\n    }\n  },\n  {\n    $group: {\n      _id: \"$instanceUserId\"\n      count: { $sum: 1 }\n    }\n  }, {\n\t\t$sort: {\n\t\t\tcount: -1\n\t\t}\n\t}\n],\n  \"cursor\": {}\n}\n",
            "status": "SUCCESS"
          }
        },
        "smartSubstitution": {
          "data": true
        },
        "updateMany": {
          "limit": {
            "data": "SINGLE"
          },
          "query": {
            "data": ""
          },
          "update": {
            "data": ""
          }
        }
      }
    },
    "executeOnLoad": true,
    "dynamicBindingPathList": [
      {
        "key": "formData.find.query.data"
      },
      {
        "key": "formData.aggregate.arrayPipelines.data"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "getSegmentSFAccounts.data.find(item => item.id === SFTableData.selectedRow.Id)?.stripe_id_c"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": [],
    "createdAt": "2024-03-29T19:32:43Z"
  },
  "id": "Success_getDevelopersUsage",
  "deleted": false,
  "gitSyncId": "6606a187be11d81f02f3151f_6607175bf2024e7cb0d52c9f"
}